@typeparam TItem
@using System.Diagnostics.CodeAnalysis

<div class="datatable">
    <table @attributes="InputAttributes">
        <thead>
            <tr>
                @if (TableHead is not null)
                {
                    @foreach (var col in Columns)
                    {
                        var param = new TableHeadColumn<TItem>(Items, col);
                        <CascadingValue Value="TableData">
                            <CascadingValue Value="param.Name">
                                @TableHead(param)
                            </CascadingValue>
                        </CascadingValue>

                    }
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Items)
            {
                if (TableBody is not null)
                {
                    <tr>
                        @foreach (var col in Columns)
                        {
                            var param = new TableRowColumn<TItem>(Items, item, col);

                            @* this will be passed to ColumnName in the Column Component*@
                            <CascadingValue Value="param.Name">
                                @TableBody(param)
                            </CascadingValue>

                        }
                    </tr>
                }
            }
        </tbody>
    </table>
    <div class="row">
        <div class="col-sm-12 col-md-5">
            <div class="result-descriptor">
                @TableData.GetResultdescriptor()
            </div>
        </div>
        <div class="col-sm-12 col-md-7">
            <ul class="page-list">
                <li class="page-li first @(TableData.Page==1?"disabled":"")">
                    <a href="" class="page-button" @onclick="TableData.SetPageFirstAsync" @onclick:preventDefault>
                        First
                    </a>
                </li>
                <li class="page-li left @(TableData.Page==1?"disabled":"")">
                    <a href="" class="page-button" @onclick="TableData.SetPagePreviousAsync" @onclick:preventDefault>
                        &lt;
                    </a>
                </li>
                <li class="page-li active">
                    <a href="" class="page-button" @onclick:preventDefault>@TableData.Page</a>
                </li>
                <li class="page-li right @(TableData.Page==TableData.TotalPages?"disabled":"")">
                    <a href="" class="page-button" @onclick="TableData.SetPageNextAsync" @onclick:preventDefault>
                        >
                    </a>
                </li>
                <li class="page-li last @(TableData.Page==TableData.TotalPages?"disabled":"")">
                    <a href="" class="page-button" @onclick="TableData.SetPageLastAsync" @onclick:preventDefault>
                        Last
                    </a>
                </li>
            </ul>
        </div>
    </div>
</div>
